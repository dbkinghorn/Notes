This run was done on: Fri Feb 23 09:01:26 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
1000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=2

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=2
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=2
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
RANK=1, NODE=1-1
HPL[xeon33] : Affinity (0) is out of range.
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :    1000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000192 Fraction=0.005 Kernel=    0.00 Mflops=53414.99
xeon33          : Column=000384 Fraction=0.195 Kernel=33182.72 Mflops=43294.56
xeon33          : Column=000576 Fraction=0.385 Kernel=20737.17 Mflops=36520.55
xeon33          : Column=000768 Fraction=0.595 Kernel=11889.52 Mflops=32213.23
xeon33          : Column=000960 Fraction=0.795 Kernel= 2835.27 Mflops=28539.30
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2        1000   192     1     1               0.02            2.73052e+01
HPL_pdgesv() start time Fri Feb 23 09:01:26 2024

HPL_pdgesv() end time   Fri Feb 23 09:01:26 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   5.99064221e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:01:26 PST 2024
This run was done on: Fri Feb 23 09:05:34 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
1000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
8 2          Ps
7 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=2

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=2
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=2
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
RANK=1, NODE=1-1
HPL[xeon33] : Affinity (0) is out of range.
Done: Fri Feb 23 09:05:34 PST 2024
This run was done on: Fri Feb 23 09:07:59 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
10000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
4 2          Ps
4 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=2

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=2
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=2
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
RANK=1, NODE=1-1
HPL[xeon33] : Affinity (0) is out of range.
Done: Fri Feb 23 09:08:00 PST 2024
This run was done on: Fri Feb 23 09:31:18 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
10000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
8 2          Ps
7 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=56

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=56
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
RANK=1, NODE=0-0
RANK=2, NODE=0-0
RANK=3, NODE=0-0
RANK=4, NODE=0-0
RANK=5, NODE=0-0
RANK=6, NODE=0-0
RANK=7, NODE=0-0
RANK=8, NODE=0-0
RANK=9, NODE=0-0
RANK=10, NODE=0-0
RANK=11, NODE=0-0
RANK=12, NODE=0-0
RANK=13, NODE=0-0
RANK=14, NODE=0-0
RANK=15, NODE=0-0
RANK=16, NODE=0-0
RANK=17, NODE=0-0
RANK=18, NODE=0-0
RANK=19, NODE=0-0
RANK=20, NODE=0-0
RANK=21, NODE=0-0
RANK=22, NODE=0-0
RANK=23, NODE=0-0
RANK=24, NODE=0-0
RANK=25, NODE=0-0
RANK=26, NODE=0-0
RANK=27, NODE=0-0
RANK=29, NODE=0-0
RANK=28, NODE=0-0
RANK=30, NODE=0-0
RANK=31, NODE=0-0
RANK=32, NODE=0-0
RANK=33, NODE=0-0
RANK=34, NODE=0-0
RANK=35, NODE=0-0
RANK=36, NODE=0-0
RANK=37, NODE=0-0
RANK=38, NODE=0-0
RANK=40, NODE=0-0
RANK=41, NODE=0-0
RANK=39, NODE=0-0
RANK=42, NODE=0-0
RANK=43, NODE=0-0
RANK=44, NODE=0-0
RANK=46, NODE=0-0
RANK=55, NODE=0-0
RANK=47, NODE=0-0
RANK=48, NODE=0-0
RANK=45, NODE=0-0
RANK=49, NODE=0-0
RANK=50, NODE=0-0
RANK=51, NODE=0-0
RANK=52, NODE=0-0
RANK=53, NODE=0-0
RANK=54, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   10000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       8 
Q        :       7 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

This run was done on: Fri Feb 23 09:38:42 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
10000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   10000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.00 Mflops=1116249.52
xeon33          : Column=001536 Fraction=0.080 Kernel=1134195.92 Mflops=1124406.95
xeon33          : Column=002304 Fraction=0.155 Kernel=1055551.18 Mflops=1104476.89
xeon33          : Column=003072 Fraction=0.235 Kernel=933104.86 Mflops=1068236.28
xeon33          : Column=003840 Fraction=0.310 Kernel=817139.22 Mflops=1027532.48
xeon33          : Column=004608 Fraction=0.385 Kernel=575061.89 Mflops=958671.49
xeon33          : Column=005376 Fraction=0.465 Kernel=435565.88 Mflops=889996.80
xeon33          : Column=006144 Fraction=0.555 Kernel=409596.09 Mflops=846265.10
xeon33          : Column=006912 Fraction=0.615 Kernel=335008.89 Mflops=810715.07
xeon33          : Column=007680 Fraction=0.695 Kernel=248928.55 Mflops=780465.90
xeon33          : Column=008448 Fraction=0.795 Kernel=158529.15 Mflops=754472.76
xeon33          : Column=009216 Fraction=0.895 Kernel=65750.14 Mflops=729574.63
xeon33          : Column=009984 Fraction=0.995 Kernel=14754.14 Mflops=712929.98
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       10000   768     1     1               0.94            7.07723e+02
HPL_pdgesv() start time Fri Feb 23 09:38:43 2024

HPL_pdgesv() end time   Fri Feb 23 09:38:44 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   6.21167533e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:38:44 PST 2024
This run was done on: Fri Feb 23 09:39:51 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.08 Mflops=8270847.83
xeon33          : Column=001536 Fraction=0.015 Kernel=3512440.53 Mflops=4956810.47
xeon33          : Column=002304 Fraction=0.030 Kernel=3252220.25 Mflops=4236008.07
xeon33          : Column=003072 Fraction=0.040 Kernel=3541028.63 Mflops=4045306.35
xeon33          : Column=003840 Fraction=0.055 Kernel=3124881.96 Mflops=3831452.87
xeon33          : Column=004608 Fraction=0.065 Kernel=3428780.95 Mflops=3762661.35
xeon33          : Column=005376 Fraction=0.080 Kernel=3770377.35 Mflops=3763674.26
xeon33          : Column=006144 Fraction=0.090 Kernel=3035119.51 Mflops=3663968.21
xeon33          : Column=006912 Fraction=0.105 Kernel=3277797.21 Mflops=3621622.92
xeon33          : Column=007680 Fraction=0.120 Kernel=3296966.41 Mflops=3590532.06
xeon33          : Column=008448 Fraction=0.130 Kernel=3241698.82 Mflops=3560390.15
xeon33          : Column=009216 Fraction=0.145 Kernel=3503047.82 Mflops=3556260.13
xeon33          : Column=009984 Fraction=0.155 Kernel=3115198.08 Mflops=3524127.27
xeon33          : Column=010752 Fraction=0.170 Kernel=3838675.06 Mflops=3541183.81
xeon33          : Column=011520 Fraction=0.180 Kernel=3066544.15 Mflops=3511882.86
xeon33          : Column=012288 Fraction=0.195 Kernel=3307523.10 Mflops=3501146.38
xeon33          : Column=013056 Fraction=0.205 Kernel=3659305.77 Mflops=3508099.19
xeon33          : Column=013824 Fraction=0.220 Kernel=2930558.93 Mflops=3478964.84
xeon33          : Column=014592 Fraction=0.235 Kernel=3544230.23 Mflops=3481495.95
xeon33          : Column=015360 Fraction=0.245 Kernel=3095124.38 Mflops=3465591.10
xeon33          : Column=016128 Fraction=0.260 Kernel=3419953.67 Mflops=3464005.47
xeon33          : Column=016896 Fraction=0.270 Kernel=3407854.27 Mflops=3462176.55
xeon33          : Column=017664 Fraction=0.285 Kernel=3377511.44 Mflops=3459574.07
xeon33          : Column=018432 Fraction=0.295 Kernel=3418467.83 Mflops=3458404.40
xeon33          : Column=019200 Fraction=0.310 Kernel=3234910.49 Mflops=3452110.27
xeon33          : Column=019968 Fraction=0.320 Kernel=3362557.06 Mflops=3449833.03
xeon33          : Column=020736 Fraction=0.335 Kernel=3095512.77 Mflops=3440658.12
xeon33          : Column=021504 Fraction=0.350 Kernel=2975318.09 Mflops=3428907.03
xeon33          : Column=022272 Fraction=0.360 Kernel=3287498.75 Mflops=3425868.33
xeon33          : Column=023040 Fraction=0.375 Kernel=3275801.64 Mflops=3422824.20
xeon33          : Column=023808 Fraction=0.385 Kernel=3183918.43 Mflops=3418134.94
xeon33          : Column=024576 Fraction=0.400 Kernel=3262574.39 Mflops=3415330.51
xeon33          : Column=025344 Fraction=0.410 Kernel=3319871.86 Mflops=3413738.07
xeon33          : Column=026112 Fraction=0.425 Kernel=3202584.85 Mflops=3410301.76
xeon33          : Column=026880 Fraction=0.440 Kernel=3185664.99 Mflops=3406843.53
xeon33          : Column=027648 Fraction=0.450 Kernel=3151047.22 Mflops=3403098.42
xeon33          : Column=028416 Fraction=0.465 Kernel=3166992.17 Mflops=3399863.41
xeon33          : Column=029184 Fraction=0.475 Kernel=3150409.72 Mflops=3396633.01
xeon33          : Column=029952 Fraction=0.490 Kernel=3049635.84 Mflops=3392272.15
xeon33          : Column=031488 Fraction=0.515 Kernel=2991056.00 Mflops=3382972.84
xeon33          : Column=032256 Fraction=0.535 Kernel=2991452.69 Mflops=3378831.10
xeon33          : Column=033792 Fraction=0.555 Kernel=2888221.26 Mflops=3369136.12
xeon33          : Column=034560 Fraction=0.575 Kernel=2856803.03 Mflops=3364489.55
xeon33          : Column=036096 Fraction=0.595 Kernel=2741509.39 Mflops=3353921.02
xeon33          : Column=037632 Fraction=0.615 Kernel=2598763.14 Mflops=3342220.47
xeon33          : Column=038400 Fraction=0.635 Kernel=2449998.96 Mflops=3335651.09
xeon33          : Column=039936 Fraction=0.655 Kernel=2383245.35 Mflops=3322873.89
xeon33          : Column=040704 Fraction=0.675 Kernel=2305512.25 Mflops=3316618.87
xeon33          : Column=042240 Fraction=0.695 Kernel=2180193.80 Mflops=3303664.45
xeon33          : Column=048384 Fraction=0.795 Kernel=1822005.23 Mflops=3253879.97
xeon33          : Column=053760 Fraction=0.895 Kernel=1197055.42 Mflops=3219919.02
xeon33          : Column=059904 Fraction=0.995 Kernel=384082.42 Mflops=3193396.90
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       60000   768     1     1              45.18            3.18744e+03
HPL_pdgesv() start time Fri Feb 23 09:39:56 2024

HPL_pdgesv() end time   Fri Feb 23 09:40:41 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   5.07236804e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:40:42 PST 2024
This run was done on: Fri Feb 23 09:41:56 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
30000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
OMP_NUM_THREADS=56
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   30000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.01 Mflops=4225498.79
xeon33          : Column=001536 Fraction=0.030 Kernel=3011088.55 Mflops=3531963.99
xeon33          : Column=002304 Fraction=0.055 Kernel=2954454.40 Mflops=3326690.83
xeon33          : Column=003072 Fraction=0.080 Kernel=2882230.53 Mflops=3212759.06
xeon33          : Column=003840 Fraction=0.105 Kernel=2851035.49 Mflops=3141629.25
xeon33          : Column=004608 Fraction=0.130 Kernel=2804932.92 Mflops=3088233.92
xeon33          : Column=005376 Fraction=0.155 Kernel=2745418.41 Mflops=3042868.79
xeon33          : Column=006144 Fraction=0.180 Kernel=2698056.59 Mflops=3004145.18
xeon33          : Column=006912 Fraction=0.205 Kernel=2618481.60 Mflops=2966396.23
xeon33          : Column=007680 Fraction=0.235 Kernel=2514207.07 Mflops=2927022.40
xeon33          : Column=008448 Fraction=0.260 Kernel=2423511.50 Mflops=2887865.70
xeon33          : Column=009216 Fraction=0.285 Kernel=2395876.99 Mflops=2854285.85
xeon33          : Column=009984 Fraction=0.310 Kernel=2250935.83 Mflops=2816149.26
xeon33          : Column=010752 Fraction=0.335 Kernel=2252128.60 Mflops=2784973.57
xeon33          : Column=011520 Fraction=0.360 Kernel=2211487.70 Mflops=2756640.66
xeon33          : Column=012288 Fraction=0.385 Kernel=2135209.94 Mflops=2728694.34
xeon33          : Column=013056 Fraction=0.410 Kernel=2100940.18 Mflops=2703444.62
xeon33          : Column=013824 Fraction=0.440 Kernel=2039989.49 Mflops=2679258.46
xeon33          : Column=014592 Fraction=0.465 Kernel=1833081.48 Mflops=2649149.93
xeon33          : Column=015360 Fraction=0.490 Kernel=1803444.43 Mflops=2622343.23
xeon33          : Column=016128 Fraction=0.515 Kernel=1708508.95 Mflops=2595618.00
xeon33          : Column=016896 Fraction=0.555 Kernel=1634261.52 Mflops=2570007.41
xeon33          : Column=017664 Fraction=0.575 Kernel=1633683.01 Mflops=2548328.60
xeon33          : Column=018432 Fraction=0.595 Kernel=1557421.06 Mflops=2527526.17
xeon33          : Column=019200 Fraction=0.615 Kernel=1473710.11 Mflops=2507443.66
xeon33          : Column=019968 Fraction=0.655 Kernel=1212039.75 Mflops=2481919.89
xeon33          : Column=020736 Fraction=0.675 Kernel=1202687.47 Mflops=2460489.94
xeon33          : Column=021504 Fraction=0.695 Kernel=1129082.78 Mflops=2440661.61
xeon33          : Column=024576 Fraction=0.795 Kernel=842339.33 Mflops=2364814.36
xeon33          : Column=026880 Fraction=0.895 Kernel=450830.20 Mflops=2317676.40
xeon33          : Column=029952 Fraction=0.995 Kernel=146973.50 Mflops=2279801.04
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       30000   768     1     1               7.92            2.27175e+03
HPL_pdgesv() start time Fri Feb 23 09:41:58 2024

HPL_pdgesv() end time   Fri Feb 23 09:42:06 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   4.98183470e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:42:06 PST 2024
This run was done on: Fri Feb 23 09:42:34 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
30000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
OMP_NUM_THREADS=28
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   30000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.01 Mflops=4220096.53
xeon33          : Column=001536 Fraction=0.030 Kernel=3012457.17 Mflops=3530941.41
xeon33          : Column=002304 Fraction=0.055 Kernel=2980211.68 Mflops=3336317.33
xeon33          : Column=003072 Fraction=0.080 Kernel=2871641.00 Mflops=3216620.50
xeon33          : Column=003840 Fraction=0.105 Kernel=2761313.87 Mflops=3124678.06
xeon33          : Column=004608 Fraction=0.130 Kernel=2796761.44 Mflops=3072784.06
xeon33          : Column=005376 Fraction=0.155 Kernel=2695448.45 Mflops=3022269.45
xeon33          : Column=006144 Fraction=0.180 Kernel=2732526.17 Mflops=2990288.92
xeon33          : Column=006912 Fraction=0.205 Kernel=2524720.96 Mflops=2943393.06
xeon33          : Column=007680 Fraction=0.235 Kernel=2520417.58 Mflops=2906906.22
xeon33          : Column=008448 Fraction=0.260 Kernel=2433419.96 Mflops=2870455.48
xeon33          : Column=009216 Fraction=0.285 Kernel=2326856.37 Mflops=2832543.50
xeon33          : Column=009984 Fraction=0.310 Kernel=2331806.32 Mflops=2802142.53
xeon33          : Column=010752 Fraction=0.335 Kernel=2271631.89 Mflops=2773193.79
xeon33          : Column=011520 Fraction=0.360 Kernel=2183546.75 Mflops=2743826.82
xeon33          : Column=012288 Fraction=0.385 Kernel=2107180.06 Mflops=2714961.38
xeon33          : Column=013056 Fraction=0.410 Kernel=2030863.34 Mflops=2686672.51
xeon33          : Column=013824 Fraction=0.440 Kernel=1957934.13 Mflops=2659200.32
xeon33          : Column=014592 Fraction=0.465 Kernel=1792458.29 Mflops=2627913.93
xeon33          : Column=015360 Fraction=0.490 Kernel=1862688.86 Mflops=2604588.73
xeon33          : Column=016128 Fraction=0.515 Kernel=1802023.70 Mflops=2582448.51
xeon33          : Column=016896 Fraction=0.555 Kernel=1608407.91 Mflops=2556224.32
xeon33          : Column=017664 Fraction=0.575 Kernel=1650760.97 Mflops=2535580.71
xeon33          : Column=018432 Fraction=0.595 Kernel=1565205.78 Mflops=2515407.83
xeon33          : Column=019200 Fraction=0.615 Kernel=1468935.59 Mflops=2495495.78
xeon33          : Column=019968 Fraction=0.655 Kernel=1379270.74 Mflops=2476213.48
xeon33          : Column=020736 Fraction=0.675 Kernel=1278132.29 Mflops=2457351.78
xeon33          : Column=021504 Fraction=0.695 Kernel=1160978.84 Mflops=2438591.56
xeon33          : Column=024576 Fraction=0.795 Kernel=885529.81 Mflops=2368380.97
xeon33          : Column=026880 Fraction=0.895 Kernel=469814.44 Mflops=2323401.28
xeon33          : Column=029952 Fraction=0.995 Kernel=146963.58 Mflops=2285331.18
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       30000   768     1     1               7.90            2.27722e+03
HPL_pdgesv() start time Fri Feb 23 09:42:35 2024

HPL_pdgesv() end time   Fri Feb 23 09:42:43 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   4.98183470e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:42:43 PST 2024
This run was done on: Fri Feb 23 09:43:59 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
30000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
OMP_NUM_THREADS=16
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   30000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.01 Mflops=4322589.85
xeon33          : Column=001536 Fraction=0.030 Kernel=3039331.67 Mflops=3585534.71
xeon33          : Column=002304 Fraction=0.055 Kernel=3005689.17 Mflops=3379715.36
xeon33          : Column=003072 Fraction=0.080 Kernel=2914677.99 Mflops=3260099.03
xeon33          : Column=003840 Fraction=0.105 Kernel=2893028.66 Mflops=3187917.48
xeon33          : Column=004608 Fraction=0.130 Kernel=2808552.81 Mflops=3127077.36
xeon33          : Column=005376 Fraction=0.155 Kernel=2704850.02 Mflops=3069862.46
xeon33          : Column=006144 Fraction=0.180 Kernel=2712606.13 Mflops=3029618.16
xeon33          : Column=006912 Fraction=0.205 Kernel=2553783.08 Mflops=2981618.18
xeon33          : Column=007680 Fraction=0.235 Kernel=2500694.41 Mflops=2939338.87
xeon33          : Column=008448 Fraction=0.260 Kernel=2470778.24 Mflops=2903404.93
xeon33          : Column=009216 Fraction=0.285 Kernel=2368979.18 Mflops=2866358.42
xeon33          : Column=009984 Fraction=0.310 Kernel=2350954.53 Mflops=2834958.39
xeon33          : Column=010752 Fraction=0.335 Kernel=2286774.62 Mflops=2804903.58
xeon33          : Column=011520 Fraction=0.360 Kernel=2158851.03 Mflops=2772024.84
xeon33          : Column=012288 Fraction=0.385 Kernel=2052400.78 Mflops=2738239.17
xeon33          : Column=013056 Fraction=0.410 Kernel=2090023.50 Mflops=2711947.82
xeon33          : Column=013824 Fraction=0.440 Kernel=1940697.04 Mflops=2682359.29
xeon33          : Column=014592 Fraction=0.465 Kernel=1958986.23 Mflops=2658192.39
xeon33          : Column=015360 Fraction=0.490 Kernel=1901489.80 Mflops=2635330.94
xeon33          : Column=016128 Fraction=0.515 Kernel=1855128.00 Mflops=2614166.95
xeon33          : Column=016896 Fraction=0.555 Kernel=1660343.55 Mflops=2588971.64
xeon33          : Column=017664 Fraction=0.575 Kernel=1586832.46 Mflops=2564928.36
xeon33          : Column=018432 Fraction=0.595 Kernel=1525394.28 Mflops=2542514.77
xeon33          : Column=019200 Fraction=0.615 Kernel=1318786.39 Mflops=2516362.00
xeon33          : Column=019968 Fraction=0.655 Kernel=1306199.56 Mflops=2494127.80
xeon33          : Column=020736 Fraction=0.675 Kernel=1250284.22 Mflops=2473974.08
xeon33          : Column=021504 Fraction=0.695 Kernel=1173730.84 Mflops=2455235.25
xeon33          : Column=024576 Fraction=0.795 Kernel=818636.99 Mflops=2374979.51
xeon33          : Column=026880 Fraction=0.895 Kernel=435301.49 Mflops=2325340.99
xeon33          : Column=029952 Fraction=0.995 Kernel=144221.94 Mflops=2286444.79
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       30000   768     1     1               7.90            2.27848e+03
HPL_pdgesv() start time Fri Feb 23 09:44:00 2024

HPL_pdgesv() end time   Fri Feb 23 09:44:08 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   4.98183470e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:44:08 PST 2024
This run was done on: Fri Feb 23 09:44:54 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
30000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   30000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.01 Mflops=4188675.47
xeon33          : Column=001536 Fraction=0.030 Kernel=3033928.09 Mflops=3533831.75
xeon33          : Column=002304 Fraction=0.055 Kernel=2973640.27 Mflops=3335476.47
xeon33          : Column=003072 Fraction=0.080 Kernel=2864790.64 Mflops=3214039.25
xeon33          : Column=003840 Fraction=0.105 Kernel=2792923.08 Mflops=3129825.01
xeon33          : Column=004608 Fraction=0.130 Kernel=2821994.72 Mflops=3081409.80
xeon33          : Column=005376 Fraction=0.155 Kernel=2720608.94 Mflops=3033379.51
xeon33          : Column=006144 Fraction=0.180 Kernel=2727588.55 Mflops=2999462.88
xeon33          : Column=006912 Fraction=0.205 Kernel=2576822.94 Mflops=2957551.23
xeon33          : Column=007680 Fraction=0.235 Kernel=2615508.58 Mflops=2928903.40
xeon33          : Column=008448 Fraction=0.260 Kernel=2474833.26 Mflops=2894247.44
xeon33          : Column=009216 Fraction=0.285 Kernel=2370136.34 Mflops=2858039.08
xeon33          : Column=009984 Fraction=0.310 Kernel=2233002.32 Mflops=2818185.63
xeon33          : Column=010752 Fraction=0.335 Kernel=2265183.59 Mflops=2787764.69
xeon33          : Column=011520 Fraction=0.360 Kernel=2267288.74 Mflops=2762629.08
xeon33          : Column=012288 Fraction=0.385 Kernel=2119335.16 Mflops=2733432.26
xeon33          : Column=013056 Fraction=0.410 Kernel=2056569.90 Mflops=2705597.76
xeon33          : Column=013824 Fraction=0.440 Kernel=2026406.92 Mflops=2680658.97
xeon33          : Column=014592 Fraction=0.465 Kernel=1838959.22 Mflops=2650787.03
xeon33          : Column=015360 Fraction=0.490 Kernel=1867754.91 Mflops=2626780.96
xeon33          : Column=016128 Fraction=0.515 Kernel=1732956.76 Mflops=2600956.70
xeon33          : Column=016896 Fraction=0.555 Kernel=1721175.90 Mflops=2578628.16
xeon33          : Column=017664 Fraction=0.575 Kernel=1631285.59 Mflops=2556590.79
xeon33          : Column=018432 Fraction=0.595 Kernel=1407243.22 Mflops=2529862.54
xeon33          : Column=019200 Fraction=0.615 Kernel=1396923.15 Mflops=2507088.62
xeon33          : Column=019968 Fraction=0.655 Kernel=1347348.38 Mflops=2486494.79
xeon33          : Column=020736 Fraction=0.675 Kernel=1258389.49 Mflops=2466781.72
xeon33          : Column=021504 Fraction=0.695 Kernel=1135813.65 Mflops=2447026.02
xeon33          : Column=024576 Fraction=0.795 Kernel=878995.26 Mflops=2375400.08
xeon33          : Column=026880 Fraction=0.895 Kernel=463327.02 Mflops=2329348.55
xeon33          : Column=029952 Fraction=0.995 Kernel=145477.98 Mflops=2290668.21
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       30000   768     1     1               7.89            2.28279e+03
HPL_pdgesv() start time Fri Feb 23 09:44:56 2024

HPL_pdgesv() end time   Fri Feb 23 09:45:04 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   4.98183470e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:45:04 PST 2024
This run was done on: Fri Feb 23 09:46:30 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.08 Mflops=8313610.70
xeon33          : Column=001536 Fraction=0.015 Kernel=3414887.49 Mflops=4867566.48
xeon33          : Column=002304 Fraction=0.030 Kernel=3248331.90 Mflops=4189555.51
xeon33          : Column=003072 Fraction=0.040 Kernel=3935517.48 Mflops=4125590.32
xeon33          : Column=003840 Fraction=0.055 Kernel=2929453.29 Mflops=3829303.40
xeon33          : Column=004608 Fraction=0.065 Kernel=3476746.20 Mflops=3769791.74
xeon33          : Column=005376 Fraction=0.080 Kernel=3808395.67 Mflops=3774823.70
xeon33          : Column=006144 Fraction=0.090 Kernel=2835112.36 Mflops=3638118.68
xeon33          : Column=006912 Fraction=0.105 Kernel=3329507.91 Mflops=3604957.08
xeon33          : Column=007680 Fraction=0.120 Kernel=3341865.75 Mflops=3580172.26
xeon33          : Column=008448 Fraction=0.130 Kernel=3283879.96 Mflops=3554937.85
xeon33          : Column=009216 Fraction=0.145 Kernel=3577103.02 Mflops=3556501.33
xeon33          : Column=009984 Fraction=0.155 Kernel=3176241.16 Mflops=3529290.70
xeon33          : Column=010752 Fraction=0.170 Kernel=4005185.28 Mflops=3554113.84
xeon33          : Column=011520 Fraction=0.180 Kernel=3149270.57 Mflops=3529654.99
xeon33          : Column=012288 Fraction=0.195 Kernel=3006527.15 Mflops=3499434.63
xeon33          : Column=013056 Fraction=0.205 Kernel=3696827.60 Mflops=3508023.91
xeon33          : Column=013824 Fraction=0.220 Kernel=2947253.08 Mflops=3479888.28
xeon33          : Column=014592 Fraction=0.235 Kernel=3754739.82 Mflops=3489974.39
xeon33          : Column=015360 Fraction=0.245 Kernel=3120734.56 Mflops=3474859.18
xeon33          : Column=016128 Fraction=0.260 Kernel=3407716.16 Mflops=3472512.23
xeon33          : Column=016896 Fraction=0.270 Kernel=3350424.01 Mflops=3468460.16
xeon33          : Column=017664 Fraction=0.285 Kernel=3339587.53 Mflops=3464448.17
xeon33          : Column=018432 Fraction=0.295 Kernel=3283850.15 Mflops=3459097.56
xeon33          : Column=019200 Fraction=0.310 Kernel=3251843.61 Mflops=3453289.20
xeon33          : Column=019968 Fraction=0.320 Kernel=3412102.88 Mflops=3452256.36
xeon33          : Column=020736 Fraction=0.335 Kernel=3090707.20 Mflops=3442873.66
xeon33          : Column=021504 Fraction=0.350 Kernel=2998668.63 Mflops=3431734.46
xeon33          : Column=022272 Fraction=0.360 Kernel=3462743.95 Mflops=3432368.30
xeon33          : Column=023040 Fraction=0.375 Kernel=3282245.80 Mflops=3429323.24
xeon33          : Column=023808 Fraction=0.385 Kernel=3147093.46 Mflops=3423709.66
xeon33          : Column=024576 Fraction=0.400 Kernel=3131905.07 Mflops=3418224.89
xeon33          : Column=025344 Fraction=0.410 Kernel=3274535.83 Mflops=3415793.22
xeon33          : Column=026112 Fraction=0.425 Kernel=3221035.26 Mflops=3412639.72
xeon33          : Column=026880 Fraction=0.440 Kernel=3240445.19 Mflops=3410031.21
xeon33          : Column=027648 Fraction=0.450 Kernel=3266337.38 Mflops=3407998.72
xeon33          : Column=028416 Fraction=0.465 Kernel=3131068.58 Mflops=3404155.98
xeon33          : Column=029184 Fraction=0.475 Kernel=3094009.42 Mflops=3400062.27
xeon33          : Column=029952 Fraction=0.490 Kernel=3033720.89 Mflops=3395429.85
xeon33          : Column=031488 Fraction=0.515 Kernel=2991664.21 Mflops=3386064.80
xeon33          : Column=032256 Fraction=0.535 Kernel=3001805.65 Mflops=3382010.07
xeon33          : Column=033792 Fraction=0.555 Kernel=2903853.38 Mflops=3372602.38
xeon33          : Column=034560 Fraction=0.575 Kernel=2892596.82 Mflops=3368298.01
xeon33          : Column=036096 Fraction=0.595 Kernel=2654065.84 Mflops=3355775.31
xeon33          : Column=037632 Fraction=0.615 Kernel=2574561.48 Mflops=3343552.40
xeon33          : Column=038400 Fraction=0.635 Kernel=2489641.51 Mflops=3337362.04
xeon33          : Column=039936 Fraction=0.655 Kernel=2354913.91 Mflops=3324018.63
xeon33          : Column=040704 Fraction=0.675 Kernel=2239092.64 Mflops=3317149.24
xeon33          : Column=042240 Fraction=0.695 Kernel=2175954.40 Mflops=3304113.33
xeon33          : Column=048384 Fraction=0.795 Kernel=1818976.64 Mflops=3254125.16
xeon33          : Column=053760 Fraction=0.895 Kernel=1186500.74 Mflops=3219684.70
xeon33          : Column=059904 Fraction=0.995 Kernel=401616.32 Mflops=3194470.94
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       60000   768     1     1              45.16            3.18845e+03
HPL_pdgesv() start time Fri Feb 23 09:46:35 2024

HPL_pdgesv() end time   Fri Feb 23 09:47:20 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   5.07236804e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:47:21 PST 2024
This run was done on: Fri Feb 23 09:50:00 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
2 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=2
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
RANK=1, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       2 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.08 Mflops=125052.36
xeon33          : Column=001536 Fraction=0.015 Kernel=123131.34 Mflops=124096.87
xeon33          : Column=002304 Fraction=0.030 Kernel=118589.70 Mflops=122253.29
xeon33          : Column=003072 Fraction=0.040 Kernel=115982.06 Mflops=120656.47
xeon33          : Column=003840 Fraction=0.055 Kernel=115758.06 Mflops=119696.39
xeon33          : Column=004608 Fraction=0.065 Kernel=112224.58 Mflops=118454.80
This run was done on: Fri Feb 23 09:56:34 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.08 Mflops=8056535.56
xeon33          : Column=001536 Fraction=0.015 Kernel=3724965.26 Mflops=5118881.42
xeon33          : Column=002304 Fraction=0.030 Kernel=3298181.46 Mflops=4340909.43
xeon33          : Column=003072 Fraction=0.040 Kernel=3579275.68 Mflops=4129830.94
xeon33          : Column=003840 Fraction=0.055 Kernel=2920753.88 Mflops=3829436.28
xeon33          : Column=004608 Fraction=0.065 Kernel=3820558.27 Mflops=3828051.46
xeon33          : Column=005376 Fraction=0.080 Kernel=3412248.44 Mflops=3767674.44
xeon33          : Column=006144 Fraction=0.090 Kernel=3070381.32 Mflops=3673107.33
xeon33          : Column=006912 Fraction=0.105 Kernel=3291554.02 Mflops=3631331.57
xeon33          : Column=007680 Fraction=0.120 Kernel=3334312.91 Mflops=3603107.54
xeon33          : Column=008448 Fraction=0.130 Kernel=3594473.64 Mflops=3602426.78
xeon33          : Column=009216 Fraction=0.145 Kernel=3149584.73 Mflops=3566051.19
xeon33          : Column=009984 Fraction=0.155 Kernel=3406372.95 Mflops=3555318.32
xeon33          : Column=010752 Fraction=0.170 Kernel=3850083.85 Mflops=3571390.73
xeon33          : Column=011520 Fraction=0.180 Kernel=3063370.47 Mflops=3539747.51
xeon33          : Column=012288 Fraction=0.195 Kernel=3238553.62 Mflops=3523483.55
xeon33          : Column=013056 Fraction=0.205 Kernel=3602957.95 Mflops=3527051.12
xeon33          : Column=013824 Fraction=0.220 Kernel=3207807.96 Mflops=3512198.07
xeon33          : Column=014592 Fraction=0.235 Kernel=3555022.05 Mflops=3513869.21
xeon33          : Column=015360 Fraction=0.245 Kernel=3119984.56 Mflops=3497635.56
xeon33          : Column=016128 Fraction=0.260 Kernel=3493559.09 Mflops=3497495.57
xeon33          : Column=016896 Fraction=0.270 Kernel=3480053.90 Mflops=3496933.67
xeon33          : Column=017664 Fraction=0.285 Kernel=3461390.50 Mflops=3495856.42
xeon33          : Column=018432 Fraction=0.295 Kernel=3359963.63 Mflops=3491884.21
xeon33          : Column=019200 Fraction=0.310 Kernel=3358996.81 Mflops=3488242.30
xeon33          : Column=019968 Fraction=0.320 Kernel=3255758.61 Mflops=3482079.52
xeon33          : Column=020736 Fraction=0.335 Kernel=3140762.20 Mflops=3473286.03
xeon33          : Column=021504 Fraction=0.350 Kernel=3027131.76 Mflops=3462105.07
xeon33          : Column=022272 Fraction=0.360 Kernel=3365274.37 Mflops=3460052.09
xeon33          : Column=023040 Fraction=0.375 Kernel=3473071.16 Mflops=3460303.92
xeon33          : Column=023808 Fraction=0.385 Kernel=3183143.53 Mflops=3454804.10
xeon33          : Column=024576 Fraction=0.400 Kernel=3311706.77 Mflops=3452235.16
xeon33          : Column=025344 Fraction=0.410 Kernel=3153509.88 Mflops=3446937.91
xeon33          : Column=026112 Fraction=0.425 Kernel=3158805.09 Mflops=3442139.46
xeon33          : Column=026880 Fraction=0.440 Kernel=3192808.10 Mflops=3438274.32
xeon33          : Column=027648 Fraction=0.450 Kernel=3135270.17 Mflops=3433775.52
xeon33          : Column=028416 Fraction=0.465 Kernel=3056014.67 Mflops=3428366.70
xeon33          : Column=029184 Fraction=0.475 Kernel=3143337.49 Mflops=3424636.80
xeon33          : Column=029952 Fraction=0.490 Kernel=3112597.87 Mflops=3420762.33
xeon33          : Column=031488 Fraction=0.515 Kernel=3078083.66 Mflops=3412975.90
xeon33          : Column=032256 Fraction=0.535 Kernel=2973390.90 Mflops=3408256.71
xeon33          : Column=033792 Fraction=0.555 Kernel=2923202.78 Mflops=3398703.12
xeon33          : Column=034560 Fraction=0.575 Kernel=2819821.17 Mflops=3393338.52
xeon33          : Column=036096 Fraction=0.595 Kernel=2641278.93 Mflops=3379993.14
xeon33          : Column=037632 Fraction=0.615 Kernel=2592846.76 Mflops=3367676.02
xeon33          : Column=038400 Fraction=0.635 Kernel=2442713.06 Mflops=3360793.77
xeon33          : Column=039936 Fraction=0.655 Kernel=2345229.13 Mflops=3346848.50
xeon33          : Column=040704 Fraction=0.675 Kernel=2290246.10 Mflops=3340262.30
xeon33          : Column=042240 Fraction=0.695 Kernel=2201132.96 Mflops=3327308.53
xeon33          : Column=048384 Fraction=0.795 Kernel=1857193.03 Mflops=3278481.43
xeon33          : Column=053760 Fraction=0.895 Kernel=1159427.86 Mflops=3242108.55
xeon33          : Column=059904 Fraction=0.995 Kernel=413385.86 Mflops=3217343.99
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       60000   768     1     1              44.84            3.21128e+03
HPL_pdgesv() start time Fri Feb 23 09:56:40 2024

HPL_pdgesv() end time   Fri Feb 23 09:57:25 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   5.07236804e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:57:25 PST 2024
This run was done on: Fri Feb 23 09:58:11 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
1536 768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :    1536 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=001536 Fraction=0.005 Kernel=    0.08 Mflops=6439989.45
xeon33          : Column=003072 Fraction=0.030 Kernel=3369611.54 Mflops=4460965.78
xeon33          : Column=004608 Fraction=0.055 Kernel=3047441.19 Mflops=3891207.97
xeon33          : Column=006144 Fraction=0.080 Kernel=3270776.61 Mflops=3728560.80
xeon33          : Column=007680 Fraction=0.105 Kernel=3212316.17 Mflops=3624611.57
xeon33          : Column=009216 Fraction=0.130 Kernel=3133880.79 Mflops=3544662.60
xeon33          : Column=010752 Fraction=0.155 Kernel=3105801.34 Mflops=3485852.80
xeon33          : Column=012288 Fraction=0.180 Kernel=3168818.46 Mflops=3451028.63
xeon33          : Column=013824 Fraction=0.205 Kernel=3051778.94 Mflops=3412456.36
xeon33          : Column=015360 Fraction=0.235 Kernel=3129429.40 Mflops=3389528.44
xeon33          : Column=016896 Fraction=0.260 Kernel=2983313.11 Mflops=3359673.26
xeon33          : Column=018432 Fraction=0.285 Kernel=2892910.12 Mflops=3328901.44
xeon33          : Column=019968 Fraction=0.310 Kernel=2870881.64 Mflops=3302284.18
xeon33          : Column=021504 Fraction=0.335 Kernel=2784584.06 Mflops=3275067.73
xeon33          : Column=023040 Fraction=0.360 Kernel=2779093.43 Mflops=3252064.54
xeon33          : Column=024576 Fraction=0.385 Kernel=2702190.41 Mflops=3228942.55
xeon33          : Column=026112 Fraction=0.410 Kernel=2633472.87 Mflops=3206280.69
xeon33          : Column=027648 Fraction=0.440 Kernel=2567700.33 Mflops=3184299.37
xeon33          : Column=029184 Fraction=0.465 Kernel=2449934.99 Mflops=3160971.18
xeon33          : Column=030720 Fraction=0.490 Kernel=2388263.03 Mflops=3138833.15
xeon33          : Column=032256 Fraction=0.515 Kernel=2293806.93 Mflops=3116730.56
xeon33          : Column=033792 Fraction=0.555 Kernel=2195679.06 Mflops=3094738.73
xeon33          : Column=035328 Fraction=0.575 Kernel=2113269.13 Mflops=3073551.02
xeon33          : Column=036864 Fraction=0.595 Kernel=2017839.74 Mflops=3052889.57
xeon33          : Column=038400 Fraction=0.615 Kernel=1912950.03 Mflops=3032648.46
xeon33          : Column=039936 Fraction=0.655 Kernel=1808315.46 Mflops=3013019.56
xeon33          : Column=041472 Fraction=0.675 Kernel=1651732.21 Mflops=2992822.22
xeon33          : Column=043008 Fraction=0.695 Kernel=1575125.15 Mflops=2974378.10
xeon33          : Column=049152 Fraction=0.795 Kernel=1261635.34 Mflops=2907656.44
xeon33          : Column=053760 Fraction=0.895 Kernel=755334.94 Mflops=2868498.93
xeon33          : Column=059904 Fraction=0.995 Kernel=254104.42 Mflops=2835680.74
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       60000  1536     1     1              50.88            2.83034e+03
HPL_pdgesv() start time Fri Feb 23 09:58:16 2024

HPL_pdgesv() end time   Fri Feb 23 09:59:07 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   4.25284199e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 09:59:08 PST 2024
This run was done on: Fri Feb 23 09:59:52 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.08 Mflops=8426730.59
xeon33          : Column=001536 Fraction=0.015 Kernel=3555115.79 Mflops=5027065.25
xeon33          : Column=002304 Fraction=0.030 Kernel=3046397.06 Mflops=4150898.56
xeon33          : Column=003072 Fraction=0.040 Kernel=3970712.04 Mflops=4106142.83
xeon33          : Column=003840 Fraction=0.055 Kernel=2915100.50 Mflops=3811076.49
xeon33          : Column=004608 Fraction=0.065 Kernel=3832182.72 Mflops=3814346.98
xeon33          : Column=005376 Fraction=0.080 Kernel=3423617.02 Mflops=3757945.14
xeon33          : Column=006144 Fraction=0.090 Kernel=3078870.10 Mflops=3666273.57
xeon33          : Column=006912 Fraction=0.105 Kernel=3299253.86 Mflops=3626239.07
xeon33          : Column=007680 Fraction=0.120 Kernel=3298013.92 Mflops=3594779.27
xeon33          : Column=008448 Fraction=0.130 Kernel=3287248.67 Mflops=3568514.64
xeon33          : Column=009216 Fraction=0.145 Kernel=3271792.13 Mflops=3545700.93
xeon33          : Column=009984 Fraction=0.155 Kernel=3449293.47 Mflops=3539330.26
xeon33          : Column=010752 Fraction=0.170 Kernel=3928480.02 Mflops=3560059.66
xeon33          : Column=011520 Fraction=0.180 Kernel=3084153.79 Mflops=3530691.84
xeon33          : Column=012288 Fraction=0.195 Kernel=3298514.44 Mflops=3518400.31
xeon33          : Column=013056 Fraction=0.205 Kernel=3631689.95 Mflops=3523440.42
xeon33          : Column=013824 Fraction=0.220 Kernel=2909950.33 Mflops=3492155.22
xeon33          : Column=014592 Fraction=0.235 Kernel=3961368.69 Mflops=3508562.54
xeon33          : Column=015360 Fraction=0.245 Kernel=2890813.73 Mflops=3481213.16
xeon33          : Column=016128 Fraction=0.260 Kernel=3600458.77 Mflops=3485172.58
xeon33          : Column=016896 Fraction=0.270 Kernel=3188468.08 Mflops=3474805.92
xeon33          : Column=017664 Fraction=0.285 Kernel=3617098.24 Mflops=3478912.90
xeon33          : Column=018432 Fraction=0.295 Kernel=3299129.92 Mflops=3473588.89
xeon33          : Column=019200 Fraction=0.310 Kernel=3286942.20 Mflops=3468391.28
xeon33          : Column=019968 Fraction=0.320 Kernel=3214851.29 Mflops=3461624.79
xeon33          : Column=020736 Fraction=0.335 Kernel=3183752.00 Mflops=3454600.51
xeon33          : Column=021504 Fraction=0.350 Kernel=3047465.80 Mflops=3444516.97
xeon33          : Column=022272 Fraction=0.360 Kernel=3419134.96 Mflops=3443989.76
xeon33          : Column=023040 Fraction=0.375 Kernel=3498281.35 Mflops=3445027.73
xeon33          : Column=023808 Fraction=0.385 Kernel=3021769.96 Mflops=3436227.87
xeon33          : Column=024576 Fraction=0.400 Kernel=3481715.69 Mflops=3437001.19
xeon33          : Column=025344 Fraction=0.410 Kernel=2805852.30 Mflops=3424504.24
xeon33          : Column=026112 Fraction=0.425 Kernel=3088536.11 Mflops=3418820.63
xeon33          : Column=026880 Fraction=0.440 Kernel=3129987.73 Mflops=3414285.14
xeon33          : Column=027648 Fraction=0.450 Kernel=3194873.22 Mflops=3411109.34
xeon33          : Column=028416 Fraction=0.465 Kernel=3224093.63 Mflops=3408585.87
xeon33          : Column=029184 Fraction=0.475 Kernel=3170564.76 Mflops=3405515.10
xeon33          : Column=029952 Fraction=0.490 Kernel=3071355.52 Mflops=3401334.14
xeon33          : Column=031488 Fraction=0.515 Kernel=3018727.03 Mflops=3392522.63
xeon33          : Column=032256 Fraction=0.535 Kernel=3002843.65 Mflops=3388404.37
xeon33          : Column=033792 Fraction=0.555 Kernel=2888534.37 Mflops=3378500.02
xeon33          : Column=034560 Fraction=0.575 Kernel=2882869.49 Mflops=3374032.94
xeon33          : Column=036096 Fraction=0.595 Kernel=2714739.61 Mflops=3362708.50
xeon33          : Column=037632 Fraction=0.615 Kernel=2599665.95 Mflops=3350859.34
xeon33          : Column=038400 Fraction=0.635 Kernel=2472363.19 Mflops=3344432.66
xeon33          : Column=039936 Fraction=0.655 Kernel=2314225.18 Mflops=3330168.24
xeon33          : Column=040704 Fraction=0.675 Kernel=2252427.20 Mflops=3323372.02
xeon33          : Column=042240 Fraction=0.695 Kernel=2217908.45 Mflops=3310957.47
xeon33          : Column=048384 Fraction=0.795 Kernel=1839812.90 Mflops=3261884.32
xeon33          : Column=053760 Fraction=0.895 Kernel=1197194.74 Mflops=3227714.94
xeon33          : Column=059904 Fraction=0.995 Kernel=389458.83 Mflops=3201470.46
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       60000   768     1     1              45.06            3.19552e+03
HPL_pdgesv() start time Fri Feb 23 09:59:58 2024

HPL_pdgesv() end time   Fri Feb 23 10:00:43 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   5.07236804e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 10:00:43 PST 2024
This run was done on: Fri Feb 23 10:01:46 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 7806048 Oct 26 07:59 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
# export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
OMP_NUM_THREADS=28
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :     768 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=000768 Fraction=0.005 Kernel=    0.08 Mflops=8223640.45
xeon33          : Column=001536 Fraction=0.015 Kernel=3809391.72 Mflops=5231728.46
xeon33          : Column=002304 Fraction=0.030 Kernel=3073143.96 Mflops=4260236.41
xeon33          : Column=003072 Fraction=0.040 Kernel=3639648.58 Mflops=4092623.94
xeon33          : Column=003840 Fraction=0.055 Kernel=2966260.29 Mflops=3817902.51
xeon33          : Column=004608 Fraction=0.065 Kernel=3856264.56 Mflops=3823824.41
xeon33          : Column=005376 Fraction=0.080 Kernel=3446082.14 Mflops=3769486.44
xeon33          : Column=006144 Fraction=0.090 Kernel=2933988.65 Mflops=3651602.72
xeon33          : Column=006912 Fraction=0.105 Kernel=3292331.16 Mflops=3612480.00
xeon33          : Column=007680 Fraction=0.120 Kernel=3269499.19 Mflops=3579460.50
xeon33          : Column=008448 Fraction=0.130 Kernel=3539694.28 Mflops=3576299.60
xeon33          : Column=009216 Fraction=0.145 Kernel=3201130.02 Mflops=3546808.49
xeon33          : Column=009984 Fraction=0.155 Kernel=3628272.97 Mflops=3551944.41
xeon33          : Column=010752 Fraction=0.170 Kernel=3556732.02 Mflops=3552225.48
xeon33          : Column=011520 Fraction=0.180 Kernel=3351121.77 Mflops=3540771.55
xeon33          : Column=012288 Fraction=0.195 Kernel=3006547.77 Mflops=3509818.83
xeon33          : Column=013056 Fraction=0.205 Kernel=3703006.83 Mflops=3518235.54
xeon33          : Column=013824 Fraction=0.220 Kernel=2956403.39 Mflops=3490051.82
xeon33          : Column=014592 Fraction=0.235 Kernel=3917822.92 Mflops=3505161.60
xeon33          : Column=015360 Fraction=0.245 Kernel=3029908.46 Mflops=3485064.59
xeon33          : Column=016128 Fraction=0.260 Kernel=3405783.75 Mflops=3482283.99
xeon33          : Column=016896 Fraction=0.270 Kernel=3368067.08 Mflops=3478502.11
xeon33          : Column=017664 Fraction=0.285 Kernel=3381483.32 Mflops=3475509.67
xeon33          : Column=018432 Fraction=0.295 Kernel=3330851.78 Mflops=3471269.47
xeon33          : Column=019200 Fraction=0.310 Kernel=3302445.58 Mflops=3466592.67
xeon33          : Column=019968 Fraction=0.320 Kernel=3219884.51 Mflops=3460021.84
xeon33          : Column=020736 Fraction=0.335 Kernel=3129109.70 Mflops=3451518.32
xeon33          : Column=021504 Fraction=0.350 Kernel=3439715.38 Mflops=3451258.82
xeon33          : Column=022272 Fraction=0.360 Kernel=3189767.93 Mflops=3445434.45
xeon33          : Column=023040 Fraction=0.375 Kernel=3524424.18 Mflops=3446934.23
xeon33          : Column=023808 Fraction=0.385 Kernel=3213719.79 Mflops=3442366.98
xeon33          : Column=024576 Fraction=0.400 Kernel=3098323.09 Mflops=3435796.63
xeon33          : Column=025344 Fraction=0.410 Kernel=3090126.41 Mflops=3429572.69
xeon33          : Column=026112 Fraction=0.425 Kernel=3211616.58 Mflops=3426019.35
xeon33          : Column=026880 Fraction=0.440 Kernel=3297247.57 Mflops=3424094.33
xeon33          : Column=027648 Fraction=0.450 Kernel=3190774.52 Mflops=3420703.37
xeon33          : Column=028416 Fraction=0.465 Kernel=3150736.90 Mflops=3416966.64
xeon33          : Column=029184 Fraction=0.475 Kernel=3046312.17 Mflops=3411980.25
xeon33          : Column=029952 Fraction=0.490 Kernel=2975084.35 Mflops=3406328.69
xeon33          : Column=031488 Fraction=0.515 Kernel=3085479.38 Mflops=3399085.35
xeon33          : Column=032256 Fraction=0.535 Kernel=3005166.27 Mflops=3394917.49
xeon33          : Column=033792 Fraction=0.555 Kernel=2882903.44 Mflops=3384733.96
xeon33          : Column=034560 Fraction=0.575 Kernel=2760015.74 Mflops=3378844.40
xeon33          : Column=036096 Fraction=0.595 Kernel=2727502.13 Mflops=3367692.38
xeon33          : Column=037632 Fraction=0.615 Kernel=2559694.48 Mflops=3354933.69
xeon33          : Column=038400 Fraction=0.635 Kernel=2467021.71 Mflops=3348416.31
xeon33          : Column=039936 Fraction=0.655 Kernel=2404530.86 Mflops=3335816.62
xeon33          : Column=040704 Fraction=0.675 Kernel=2337679.00 Mflops=3329740.29
xeon33          : Column=042240 Fraction=0.695 Kernel=2232766.62 Mflops=3317478.97
xeon33          : Column=048384 Fraction=0.795 Kernel=1843591.07 Mflops=3268318.28
xeon33          : Column=053760 Fraction=0.895 Kernel=1145885.53 Mflops=3231576.59
xeon33          : Column=059904 Fraction=0.995 Kernel=372217.52 Mflops=3203891.36
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       60000   768     1     1              45.03            3.19789e+03
HPL_pdgesv() start time Fri Feb 23 10:01:51 2024

HPL_pdgesv() end time   Fri Feb 23 10:02:36 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   5.07236804e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 10:02:36 PST 2024
This run was done on: Fri Feb 23 10:06:40 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 2567256 Oct 26 07:59 xhpl-ai_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
USE_HPL_AI=1
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl-ai_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
OMP_NUM_THREADS=56
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N      :   60000 
NB     :     768 
PMAP   : Column-major process mapping
P      :       1 
Q      :       1 
PFACT  :   Right 
NBMIN  :       2 
NDIV   :       2 
RFACT  :   Right 
BCAST  :   1ring 
DEPTH  :       0 
SWAP   : Binary-exchange
L1     : no-transposed form
U      : no-transposed form
EQUIL  : no
ALIGN  : 8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=001536 Fraction=0.015 Kernel= 27758151 Mflops= 51290545
xeon33          : Column=002304 Fraction=0.030 Kernel= 26856036 Mflops= 39594980
xeon33          : Column=003072 Fraction=0.040 Kernel= 25531200 Mflops= 34968332
xeon33          : Column=003840 Fraction=0.055 Kernel= 27055539 Mflops= 33132127
xeon33          : Column=004608 Fraction=0.065 Kernel= 25927043 Mflops= 31758180
xeon33          : Column=005376 Fraction=0.080 Kernel= 26336275 Mflops= 30921031
xeon33          : Column=006144 Fraction=0.090 Kernel= 24714135 Mflops= 30065031
xeon33          : Column=006912 Fraction=0.105 Kernel= 28632020 Mflops= 29916433
xeon33          : Column=007680 Fraction=0.120 Kernel= 23858620 Mflops= 29263070
xeon33          : Column=008448 Fraction=0.130 Kernel= 28997590 Mflops= 29242007
xeon33          : Column=009216 Fraction=0.145 Kernel= 22889132 Mflops= 28677319
xeon33          : Column=009984 Fraction=0.155 Kernel= 34299694 Mflops= 28983277
xeon33          : Column=010752 Fraction=0.170 Kernel= 22817797 Mflops= 28530135
xeon33          : Column=011520 Fraction=0.180 Kernel= 32809984 Mflops= 28732166
xeon33          : Column=012288 Fraction=0.195 Kernel= 23084053 Mflops= 28387438
xeon33          : Column=013056 Fraction=0.205 Kernel= 33795186 Mflops= 28597273
xeon33          : Column=013824 Fraction=0.220 Kernel= 21165147 Mflops= 28176830
xeon33          : Column=014592 Fraction=0.235 Kernel= 33298429 Mflops= 28348978
xeon33          : Column=015360 Fraction=0.245 Kernel= 27898599 Mflops= 28332163
xeon33          : Column=016128 Fraction=0.260 Kernel= 21456170 Mflops= 28024101
xeon33          : Column=016896 Fraction=0.270 Kernel= 30256642 Mflops= 28090552
xeon33          : Column=017664 Fraction=0.285 Kernel= 30032565 Mflops= 28145169
xeon33          : Column=018432 Fraction=0.295 Kernel= 30044380 Mflops= 28195299
xeon33          : Column=019200 Fraction=0.310 Kernel= 27270818 Mflops= 28170097
xeon33          : Column=019968 Fraction=0.320 Kernel= 28838060 Mflops= 28186278
xeon33          : Column=020736 Fraction=0.335 Kernel= 28527695 Mflops= 28194139
xeon33          : Column=021504 Fraction=0.350 Kernel= 29097839 Mflops= 28213339
xeon33          : Column=022272 Fraction=0.360 Kernel= 27358008 Mflops= 28195162
xeon33          : Column=023040 Fraction=0.375 Kernel= 24078171 Mflops= 28101878
xeon33          : Column=023808 Fraction=0.385 Kernel= 28845362 Mflops= 28115128
xeon33          : Column=024576 Fraction=0.400 Kernel= 22218932 Mflops= 27987224
xeon33          : Column=025344 Fraction=0.410 Kernel= 27747305 Mflops= 27983299
xeon33          : Column=026112 Fraction=0.425 Kernel= 24564461 Mflops= 27923904
xeon33          : Column=026880 Fraction=0.440 Kernel= 23506741 Mflops= 27848573
xeon33          : Column=027648 Fraction=0.450 Kernel= 33536896 Mflops= 27912755
xeon33          : Column=028416 Fraction=0.465 Kernel= 25524207 Mflops= 27879457
xeon33          : Column=029184 Fraction=0.475 Kernel= 23148536 Mflops= 27811187
xeon33          : Column=029952 Fraction=0.490 Kernel= 28414679 Mflops= 27817862
xeon33          : Column=031488 Fraction=0.515 Kernel= 23016298 Mflops= 27699445
xeon33          : Column=032256 Fraction=0.535 Kernel= 30972677 Mflops= 27726888
xeon33          : Column=033792 Fraction=0.555 Kernel= 24278890 Mflops= 27660343
xeon33          : Column=034560 Fraction=0.575 Kernel= 21447549 Mflops= 27598777
xeon33          : Column=036096 Fraction=0.595 Kernel= 22749515 Mflops= 27517440
xeon33          : Column=037632 Fraction=0.615 Kernel= 21722612 Mflops= 27429286
xeon33          : Column=038400 Fraction=0.635 Kernel= 24724319 Mflops= 27413066
xeon33          : Column=039936 Fraction=0.655 Kernel= 23255773 Mflops= 27365995
xeon33          : Column=040704 Fraction=0.675 Kernel= 22361452 Mflops= 27339844
xeon33          : Column=042240 Fraction=0.695 Kernel= 20949898 Mflops= 27277256
xeon33          : Column=048384 Fraction=0.795 Kernel= 17498317 Mflops= 26993433
xeon33          : Column=053760 Fraction=0.895 Kernel= 10434044 Mflops= 26733003
xeon33          : Column=059904 Fraction=0.995 Kernel=  2727531 Mflops= 26470938
	1st iteration. Residual :   1.55284999e+04, time =   0.22 sec
	2nd iteration. Residual :   6.43340299e-03, time =   0.22 sec
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00R2R2       60000   768     1     1               5.88            2.44735e+04
HPL_psgesv() start time Fri Feb 23 10:06:43 2024

HPL_psgesv() end time   Fri Feb 23 10:06:49 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   6.43340299e-03 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 10:06:49 PST 2024
This run was done on: Fri Feb 23 10:13:11 PST 2024
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
114560         Ns
1            # of NBs
1536 768 192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
1.0          threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 root root 2567256 Oct 26 07:59 xhpl-ai_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2023 Intel Corporation.
#
# This software and the related documents are Intel copyrighted  materials,  and
# your use of  them is  governed by the  express license  under which  they were
# provided to you (License).  Unless the License provides otherwise, you may not
# use, modify, copy, publish, distribute,  disclose or transmit this software or
# the related documents without Intel's prior written permission.
#
# This software and the related documents  are provided as  is,  with no express
# or implied  warranties,  other  than those  that are  expressly stated  in the
# License.
#===============================================================================

echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=1

# Set the MPI per node for each node.
# MPI_PER_NODE should be equal to 1 or number of sockets on the system.
# It will be same as -perhost or -ppn paramaters in mpirun/mpiexec.
export MPI_PER_NODE=1

# Set the number of NUMA nodes per MPI. (MPI_PER_NODE * NUMA_PER_MPI)
# should be equal to number of NUMA nodes on the system.
export NUMA_PER_MPI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark
#====================================================================

# Comment in to enable Intel(R) Optimized HPL-AI Benchmark
export USE_HPL_AI=1

#====================================================================
# Following option is for Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# By default, Intel(R) Optimized HPL-AI Benchmark for GPU will use
# Bfloat16 matrix. If you prefer less iterations, you could choose
# float based matrix. But it will reduce maximum problem size. 
# export USE_BF16MAT=0

#====================================================================
# Following options are for Intel(R) Distribution for LINPACK
# Benchmark for GPU and Intel(R) Optimized HPL-AI Benchmark for GPU
#====================================================================

# Comment in to enable GPUs
# export USE_HPL_GPU=1

# Select backend driver for GPU (OpenCL ... 0, Level Zero ... 1)
# export HPL_DRIVER=0

# Number of stacks on each GPU
# export HPL_NUMSTACK=2

# Total number of GPUs on each node
# export HPL_NUMDEV=2

#====================================================================

export OUT=xhpl_intel64_dynamic_outputs.txt

if [ -z ${USE_HPL_AI} ]; then
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl_intel64_dynamic
else
export HPL_EXE=xhpl_intel64_dynamic_gpu
fi
else
if [ -z ${USE_HPL_GPU} ]; then
export HPL_EXE=xhpl-ai_intel64_dynamic
else
export HPL_EXE=xhpl-ai_intel64_dynamic_gpu
fi
fi

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l ${HPL_EXE} >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel(R) MPI Library command
# line using the -genv option (to appear before the -np 1):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
SHELL=/bin/bash
TBBROOT=/opt/intel/oneapi/tbb/2021.11/env/..
USE_HPL_AI=1
INSPECTOR_2023_DIR=/opt/intel/oneapi/inspector/2024.0
ONEAPI_ROOT=/opt/intel/oneapi
PKG_CONFIG_PATH=/opt/intel/oneapi/vtune/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/tbb/2021.11/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.11/lib/pkgconfig:/opt/intel/oneapi/mkl/2024.0/lib/pkgconfig:/opt/intel/oneapi/ippcp/2021.9/lib/pkgconfig:/opt/intel/oneapi/inspector/2024.0/include/pkgconfig/lib64:/opt/intel/oneapi/dpl/2022.3/lib/pkgconfig:/opt/intel/oneapi/dnnl/2024.0/lib/pkgconfig:/opt/intel/oneapi/dal/2024.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2024.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.11/lib/pkgconfig/:/opt/intel/oneapi/advisor/2024.0/include/pkgconfig/lib64:
VT_MPI=impi4
ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards
FPGA_VARS_DIR=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
CCL_ROOT=/opt/intel/oneapi/ccl/2021.11
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.11
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
MPI_PER_NODE=1
DNNLROOT=/opt/intel/oneapi/dnnl/2024.0
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2024.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/debugger/2024.0/etc/debugger/sys_check/sys_check.py:/opt/intel/oneapi/compiler/2024.0/etc/compiler/sys_check/sys_check.sh
ADVISOR_2024_DIR=/opt/intel/oneapi/advisor/2024.0
PWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks/mp_linpack
CCL_CONFIGURATION=cpu_gpu_dpcpp
LOGNAME=kinghorn
DPL_ROOT=/opt/intel/oneapi/dpl/2022.3
MANPATH=/opt/intel/oneapi/mpi/2021.11/share/man:/opt/intel/oneapi/itac/2022.0/man:/opt/intel/oneapi/debugger/2024.0/share/man:/opt/intel/oneapi/compiler/2024.0/documentation/en/man/common:
HOME=/root
GDB_INFO=/opt/intel/oneapi/debugger/2024.0/share/info/
CCL_CONFIGURATION_PATH=
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SETVARS_COMPLETED=1
HPL_EXE=xhpl-ai_intel64_dynamic
APM=/opt/intel/oneapi/advisor/2024.0/perfmodels
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2021.11/env/..:/opt/intel/oneapi/mkl/2024.0/lib/cmake:/opt/intel/oneapi/ipp/2021.10/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL:/opt/intel/oneapi/dnnl/2024.0/lib/cmake:/opt/intel/oneapi/dal/2024.0:/opt/intel/oneapi/compiler/2024.0
CMPLR_ROOT=/opt/intel/oneapi/compiler/2024.0
FPGA_VARS_ARGS=
INFOPATH=/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib
IPPROOT=/opt/intel/oneapi/ipp/2021.10
IPP_TARGET_ARCH=intel64
PYTHONPATH=/opt/intel/oneapi/advisor/2024.0/pythonapi
TERM=xterm-256color
VT_ROOT=/opt/intel/oneapi/itac/2022.0
DALROOT=/opt/intel/oneapi/dal/2024.0
USER=root
LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib/:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
DAL_MAJOR_BINARY=2
IPPCRYPTOROOT=/opt/intel/oneapi/ippcp/2021.9
IPPCP_TARGET_ARCH=intel64
SHLVL=2
VTUNE_PROFILER_2024_DIR=/opt/intel/oneapi/vtune/2024.0
OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/2024.0/lib/libintelocl.so
MPI_PROC_NUM=1
CLASSPATH=/opt/intel/oneapi/mpi/2021.11/share/java/mpi.jar
INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/2024.0/opt/oclfpga
LD_LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.11/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.11/lib:/opt/intel/oneapi/mkl/2024.0/lib:/opt/intel/oneapi/itac/2022.0/slib:/opt/intel/oneapi/ippcp/2021.9/lib/:/opt/intel/oneapi/ipp/2021.10/lib:/opt/intel/oneapi/dpl/2022.3/lib:/opt/intel/oneapi/dnnl/2024.0/lib:/opt/intel/oneapi/debugger/2024.0/opt/debugger/lib:/opt/intel/oneapi/dal/2024.0/lib:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/2024.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2024.0/lib:/opt/intel/oneapi/ccl/2021.11/lib/
VT_LIB_DIR=/opt/intel/oneapi/itac/2022.0/lib
VTUNE_PROFILER_DIR=/opt/intel/oneapi/vtune/2024.0
VT_SLIB_DIR=/opt/intel/oneapi/itac/2022.0/slib
MKLROOT=/opt/intel/oneapi/mkl/2024.0
NUMA_PER_MPI=1
OMP_NUM_THREADS=56
DAL_MINOR_BINARY=0
NLSPATH=/opt/intel/oneapi/mkl/2024.0/share/locale/%l_%t/%N:/opt/intel/oneapi/compiler/2024.0/lib/locale/%l_%t/%N
PATH=/opt/intel/oneapi/vtune/2024.0/bin64:/opt/intel/oneapi/mpi/2021.11/opt/mpi/libfabric/bin:/opt/intel/oneapi/mpi/2021.11/bin:/opt/intel/oneapi/mkl/2024.0/bin/:/opt/intel/oneapi/itac/2022.0/bin:/opt/intel/oneapi/inspector/2024.0/bin64:/opt/intel/oneapi/dpcpp-ct/2024.0/bin:/opt/intel/oneapi/dev-utilities/2024.0/bin:/opt/intel/oneapi/debugger/2024.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/bin:/opt/intel/oneapi/compiler/2024.0/bin:/opt/intel/oneapi/advisor/2024.0/bin64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2024.0/opt/debugger
INTEL_LICENSE_FILE=/opt/intel/licenses:/root/intel/licenses
CPATH=/opt/intel/oneapi/tbb/2021.11/env/../include:/opt/intel/oneapi/mpi/2021.11/include:/opt/intel/oneapi/mkl/2024.0/include:/opt/intel/oneapi/ippcp/2021.9/include:/opt/intel/oneapi/ipp/2021.10/include:/opt/intel/oneapi/dpl/2022.3/include:/opt/intel/oneapi/dpcpp-ct/2024.0/include:/opt/intel/oneapi/dnnl/2024.0/include:/opt/intel/oneapi/dev-utilities/2024.0/include:/opt/intel/oneapi/dal/2024.0/include/dal:/opt/intel/oneapi/compiler/2024.0/opt/oclfpga/include:/opt/intel/oneapi/ccl/2021.11/include
OUT=xhpl_intel64_dynamic_outputs.txt
OLDPWD=/opt/intel/oneapi/mkl/latest/share/mkl/benchmarks
_=/usr/bin/env
Actual run: 
RANK=0, NODE=0-0
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N      :  114560 
NB     :    1536 
PMAP   : Column-major process mapping
P      :       1 
Q      :       1 
PFACT  :   Right 
NBMIN  :       2 
NDIV   :       2 
RFACT  :   Right 
BCAST  :   1ring 
DEPTH  :       0 
SWAP   : Binary-exchange
L1     : no-transposed form
U      : no-transposed form
EQUIL  : no
ALIGN  : 8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                 1.0

xeon33          : Column=003072 Fraction=0.015 Kernel= 40027595 Mflops= 73643326
xeon33          : Column=004608 Fraction=0.030 Kernel= 46927304 Mflops= 62167870
xeon33          : Column=006144 Fraction=0.045 Kernel= 38105027 Mflops= 53994303
xeon33          : Column=007680 Fraction=0.055 Kernel= 45435460 Mflops= 52138212
xeon33          : Column=009216 Fraction=0.070 Kernel= 44937298 Mflops= 50873484
xeon33          : Column=010752 Fraction=0.085 Kernel= 43929869 Mflops= 49841852
xeon33          : Column=012288 Fraction=0.095 Kernel= 43736397 Mflops= 49069238
xeon33          : Column=013824 Fraction=0.110 Kernel= 42885817 Mflops= 48381039
xeon33          : Column=015360 Fraction=0.125 Kernel= 42128573 Mflops= 47761958
xeon33          : Column=016896 Fraction=0.135 Kernel= 41916196 Mflops= 47247580
xeon33          : Column=018432 Fraction=0.150 Kernel= 40777671 Mflops= 46726206
xeon33          : Column=019968 Fraction=0.165 Kernel= 39193519 Mflops= 46160458
xeon33          : Column=021504 Fraction=0.175 Kernel= 37452388 Mflops= 45544745
xeon33          : Column=023040 Fraction=0.190 Kernel= 40797801 Mflops= 45264251
xeon33          : Column=024576 Fraction=0.205 Kernel= 41301332 Mflops= 45052524
xeon33          : Column=026112 Fraction=0.215 Kernel= 40553291 Mflops= 44827747
xeon33          : Column=027648 Fraction=0.230 Kernel= 37494599 Mflops= 44464014
xeon33          : Column=029184 Fraction=0.245 Kernel= 41283844 Mflops= 44331490
xeon33          : Column=030720 Fraction=0.255 Kernel= 42197315 Mflops= 44250731
xeon33          : Column=032256 Fraction=0.270 Kernel= 41334832 Mflops= 44146040
xeon33          : Column=033792 Fraction=0.285 Kernel= 40758977 Mflops= 44031259
xeon33          : Column=035328 Fraction=0.295 Kernel= 40004145 Mflops= 43901709
xeon33          : Column=036864 Fraction=0.310 Kernel= 39705852 Mflops= 43774843
xeon33          : Column=038400 Fraction=0.325 Kernel= 38370175 Mflops= 43617041
xeon33          : Column=039936 Fraction=0.340 Kernel= 43413766 Mflops= 43612124
xeon33          : Column=041472 Fraction=0.350 Kernel= 37996559 Mflops= 43467050
xeon33          : Column=043008 Fraction=0.365 Kernel= 35835613 Mflops= 43271742
xeon33          : Column=044544 Fraction=0.380 Kernel= 46148554 Mflops= 43325488
xeon33          : Column=046080 Fraction=0.390 Kernel= 37319195 Mflops= 43195557
xeon33          : Column=047616 Fraction=0.405 Kernel= 42520505 Mflops= 43183521
xeon33          : Column=049152 Fraction=0.420 Kernel= 36113530 Mflops= 43044545
xeon33          : Column=050688 Fraction=0.430 Kernel= 39922839 Mflops= 42992466
xeon33          : Column=052224 Fraction=0.445 Kernel= 40393365 Mflops= 42952255
xeon33          : Column=053760 Fraction=0.460 Kernel= 41135110 Mflops= 42926351
xeon33          : Column=055296 Fraction=0.470 Kernel= 39498967 Mflops= 42878649
xeon33          : Column=056832 Fraction=0.485 Kernel= 39560447 Mflops= 42835438
xeon33          : Column=059904 Fraction=0.515 Kernel= 41900271 Mflops= 42814685
xeon33          : Column=061440 Fraction=0.535 Kernel= 41064915 Mflops= 42796656
xeon33          : Column=064512 Fraction=0.555 Kernel= 39036247 Mflops= 42723400
xeon33          : Column=066048 Fraction=0.575 Kernel= 37148464 Mflops= 42671814
xeon33          : Column=069120 Fraction=0.595 Kernel= 36422869 Mflops= 42566416
xeon33          : Column=070656 Fraction=0.615 Kernel= 35036533 Mflops= 42507203
xeon33          : Column=073728 Fraction=0.635 Kernel= 33617841 Mflops= 42377999
xeon33          : Column=075264 Fraction=0.655 Kernel= 31771710 Mflops= 42305591
xeon33          : Column=078336 Fraction=0.675 Kernel= 30206923 Mflops= 42153130
xeon33          : Column=079872 Fraction=0.695 Kernel= 29560103 Mflops= 42082072
xeon33          : Column=092160 Fraction=0.795 Kernel= 24077819 Mflops= 41448617
xeon33          : Column=102912 Fraction=0.895 Kernel= 13544900 Mflops= 40906650
	1st iteration. Residual :   3.70288608e+03, time =   0.66 sec
	2nd iteration. Residual :   4.91894359e-04, time =   0.65 sec
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00R2R2      114560  1536     1     1              26.12            3.83696e+04
HPL_psgesv() start time Fri Feb 23 10:13:21 2024

HPL_psgesv() end time   Fri Feb 23 10:13:47 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   4.91894359e-04 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb 23 10:13:47 PST 2024
